/*******************************************
 ***Problema: Minimize Malware Spread
 ***ID: 924
 ***Juez: LeetCode
 ***Tipo: DFS
 ***Autor: Jhosimar George Arias Figueroa
 *******************************************/

#define MAX 305

class Solution {
public:
    vector<int> adj[MAX];
    vector<bool> seen;
    vector<int> tot;
    
    void dfs(int u, int &cnt){
        for( int i = 0 ; i < adj[u].size(); ++i ){
            int v = adj[u][i];
            if( !seen[v] ){
                seen[v] = true;
                dfs(v, ++cnt);
            }
        }
    }
    
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        int V = graph.size();
        for( int i = 0 ; i < MAX;  ++i ) adj[i].clear();
        for( int i = 0 ; i < V ; ++i ){
            for( int j = 0 ; j < V ; ++j ){
                if( graph[i][j]) 
                    adj[i].push_back(j);
            }
        }
        seen = vector<bool>(V, false);
        sort( initial.begin(), initial.end());
        int maxi = -1, res = 0;
        for( int i = 0 ; i < initial.size(); ++i ){
            if( seen[ initial[i] ] ){
                continue;
            }
            int cnt = 0;            
            seen[ initial[i] ] = true;
            dfs(initial[i], cnt);
            
            if( cnt > maxi ){
                maxi = cnt;
                res = initial[i];
            }
        }
        return res;
    }
};
